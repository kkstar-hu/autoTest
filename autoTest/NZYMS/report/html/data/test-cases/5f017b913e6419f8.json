{
  "uid" : "5f017b913e6419f8",
  "name" : "3.查验过程录入",
  "fullName" : "TestCase.SmokeTest.04_checkboxprocess.test_checkplan#testeditcheckinfo",
  "historyId" : "5d6f353e182d0a8022dc07259daefb1c",
  "time" : {
    "start" : 1673340001815,
    "stop" : 1673340001815,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=108.0.5359.125)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00C3ACD3+2075859]\n\tOrdinal0 [0x00BCEE61+1633889]\n\tOrdinal0 [0x00ACB7BD+571325]\n\tOrdinal0 [0x00AB2E1A+470554]\n\tOrdinal0 [0x00B1AA0B+895499]\n\tOrdinal0 [0x00B2AC96+961686]\n\tOrdinal0 [0x00B17136+880950]\n\tOrdinal0 [0x00AEFEFD+720637]\n\tOrdinal0 [0x00AF0F3F+724799]\n\tGetHandleVerifier [0x00EEEED2+2769538]\n\tGetHandleVerifier [0x00EE0D95+2711877]\n\tGetHandleVerifier [0x00CCA03A+521194]\n\tGetHandleVerifier [0x00CC8DA0+516432]\n\tOrdinal0 [0x00BD682C+1665068]\n\tOrdinal0 [0x00BDB128+1683752]\n\tOrdinal0 [0x00BDB215+1683989]\n\tOrdinal0 [0x00BE6484+1729668]\n\tBaseThreadInitThunk [0x76416BD9+25]\n\tRtlGetFullPathName_UEx [0x779B8FD2+1218]\n\tRtlGetFullPathName_UEx [0x779B8F9D+1165]",
  "statusTrace" : "@pytest.fixture(scope=\"session\")\n    def driver():\n        driver=webdriver.Chrome()\n        login = Login(driver)\n>       login.geturl(config.host)\n\nD:\\test\\autoTest\\NZYMS\\TestCase\\conftest.py:11: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\Base\\basepage.py:103: in geturl\n    self.driver.maximize_window()\nC:\\python309\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:607: in maximize_window\n    self.execute(command, None)\nC:\\python309\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000021ED44B28B0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...unk [0x76416BD9+25]\\\\n\\\\tRtlGetFullPathName_UEx [0x779B8FD2+1218]\\\\n\\\\tRtlGetFullPathName_UEx [0x779B8F9D+1165]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=108.0.5359.125)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x00C3ACD3+2075859]\nE       \tOrdinal0 [0x00BCEE61+1633889]\nE       \tOrdinal0 [0x00ACB7BD+571325]\nE       \tOrdinal0 [0x00AB2E1A+470554]\nE       \tOrdinal0 [0x00B1AA0B+895499]\nE       \tOrdinal0 [0x00B2AC96+961686]\nE       \tOrdinal0 [0x00B17136+880950]\nE       \tOrdinal0 [0x00AEFEFD+720637]\nE       \tOrdinal0 [0x00AF0F3F+724799]\nE       \tGetHandleVerifier [0x00EEEED2+2769538]\nE       \tGetHandleVerifier [0x00EE0D95+2711877]\nE       \tGetHandleVerifier [0x00CCA03A+521194]\nE       \tGetHandleVerifier [0x00CC8DA0+516432]\nE       \tOrdinal0 [0x00BD682C+1665068]\nE       \tOrdinal0 [0x00BDB128+1683752]\nE       \tOrdinal0 [0x00BDB215+1683989]\nE       \tOrdinal0 [0x00BE6484+1729668]\nE       \tBaseThreadInitThunk [0x76416BD9+25]\nE       \tRtlGetFullPathName_UEx [0x779B8FD2+1218]\nE       \tRtlGetFullPathName_UEx [0x779B8F9D+1165]\n\nC:\\python309\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:249: NoSuchWindowException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1673339995081,
      "stop" : 1673340000732,
      "duration" : 5651
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=108.0.5359.125)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00C3ACD3+2075859]\n\tOrdinal0 [0x00BCEE61+1633889]\n\tOrdinal0 [0x00ACB7BD+571325]\n\tOrdinal0 [0x00AB2E1A+470554]\n\tOrdinal0 [0x00B1AA0B+895499]\n\tOrdinal0 [0x00B2AC96+961686]\n\tOrdinal0 [0x00B17136+880950]\n\tOrdinal0 [0x00AEFEFD+720637]\n\tOrdinal0 [0x00AF0F3F+724799]\n\tGetHandleVerifier [0x00EEEED2+2769538]\n\tGetHandleVerifier [0x00EE0D95+2711877]\n\tGetHandleVerifier [0x00CCA03A+521194]\n\tGetHandleVerifier [0x00CC8DA0+516432]\n\tOrdinal0 [0x00BD682C+1665068]\n\tOrdinal0 [0x00BDB128+1683752]\n\tOrdinal0 [0x00BDB215+1683989]\n\tOrdinal0 [0x00BE6484+1729668]\n\tBaseThreadInitThunk [0x76416BD9+25]\n\tRtlGetFullPathName_UEx [0x779B8FD2+1218]\n\tRtlGetFullPathName_UEx [0x779B8F9D+1165]\n\n",
    "statusTrace" : "  File \"C:\\python309\\lib\\site-packages\\pluggy\\_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"C:\\python309\\lib\\site-packages\\_pytest\\fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"C:\\python309\\lib\\site-packages\\_pytest\\fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"D:\\test\\autoTest\\NZYMS\\TestCase\\conftest.py\", line 11, in driver\n    login.geturl(config.host)\n  File \"D:\\autoTest\\autoTest\\Base\\basepage.py\", line 103, in geturl\n    self.driver.maximize_window()\n  File \"C:\\python309\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 607, in maximize_window\n    self.execute(command, None)\n  File \"C:\\python309\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 444, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\python309\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 249, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : true
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "4.查验流程"
  }, {
    "name" : "parentSuite",
    "value" : "TestCase.SmokeTest.04_checkboxprocess"
  }, {
    "name" : "suite",
    "value" : "test_checkplan"
  }, {
    "name" : "host",
    "value" : "LAPTOP-JVNK63L5"
  }, {
    "name" : "thread",
    "value" : "16644-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCase.SmokeTest.04_checkboxprocess.test_checkplan"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "input",
    "value" : "{'人力装卸费': '是', '劳务公司': '019179/测试劳务公司', '叉车工': 'abc', '备注': '019179/测试劳务公司', '掏箱方式': '0/全掏', '散货称重次数': 1, '是否延查': '否', '是否开箱门': '否', '是否拖车': '否', '是否施封': '是', '是否残损': '是', '是否消毒': '否', '是否熏蒸': '否', '查验单位': '海事', '称重次数': '1', '立方数': '1', '转堆次数': None, '堆场': 'FZ/辅助区堆场', '尺寸': '10', '箱型': 'GP', '箱高': '8', 'alert': '修改成功', '计划类型': '人工查验'}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "5f017b913e6419f8.json",
  "parameterValues" : [ "{'人力装卸费': '是', '劳务公司': '019179/测试劳务公司', '叉车工': 'abc', '备注': '019179/测试劳务公司', '掏箱方式': '0/全掏', '散货称重次数': 1, '是否延查': '否', '是否开箱门': '否', '是否拖车': '否', '是否施封': '是', '是否残损': '是', '是否消毒': '否', '是否熏蒸': '否', '查验单位': '海事', '称重次数': '1', '立方数': '1', '转堆次数': None, '堆场': 'FZ/辅助区堆场', '尺寸': '10', '箱型': 'GP', '箱高': '8', 'alert': '修改成功', '计划类型': '人工查验'}" ]
}